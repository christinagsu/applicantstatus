<?php
error_reporting(E_ALL & ~E_NOTICE);
class Request {

    public $url_elements;
    public $verb;
    public $parameters;

    public $format;

    public function __construct() {
        $this->verb = $_SERVER['REQUEST_METHOD'];

        //$this->url_elements = explode('/', $_SERVER['PATH_INFO']);
                $this->url_elements = explode('/', $_SERVER['REQUEST_URI']);

        $this->parseIncomingParams();
        // initialise json as default format
        $this->format = 'json';
        if(isset($this->parameters['format'])) {
            $this->format = $this->parameters['format'];
        }
        return true;
    }



    public function parseIncomingParams() {

      $parameters = array();
        // first of all, pull the GET vars
      if (isset($_SERVER['QUERY_STRING'])) {
          parse_str($_SERVER['QUERY_STRING'], $parameters);
      }

      // now how about PUT/POST bodies? These override what we got from GET
      $body = file_get_contents("php://input");

      echo " Body ";
      echo "RAW DATA FROM SENDER<br>"; print_r($body); echo "<br><br>"; //jas

                $content_type = false;

   //  echo "Content type: ".$_SERVER['CONTENT_TYPE']."<br><br>";//jas
                if(isset($_SERVER['CONTENT_TYPE'])) {
            $content_type = $_SERVER['CONTENT_TYPE'];
        }
        switch($content_type) {
            case "application/json":
                $body_params = json_decode($body);
                if($body_params) {
                    foreach($body_params as $param_name => $param_value) {
                        $parameters[$param_name] = $param_value;
                        echo "in json decode";
                                        }
                }
                $this->format = "json";
                break;




            case "application/x-www-form-urlencoded":
                //echo "in x-www";

                               $postvars =  json_decode($body);
                                foreach($postvars as $field => $value) {
                                        $parameters[$field] = $value;
                                }
                $this->format = "html";
                break;
            default:
                //echo "default";
                                // we could parse other supported formats here
                break;
        }
        $this->parameters = $parameters;
        //print_r( $this->parameters['gpcid']);
        }
}
?>

The error is occurring in the area marked in red. 

                               $postvars =  json_decode($body);
                                foreach($postvars as $field => $value) {
                                        $parameters[$field] = $value;

'{"authentication":{"api_key":"GSU783354110","api_pass":"A|7E>arpK.L8:qkAX$ab"},"studentData":{"token":"8be0505d67c371a84ab0f67157686570","studentId":"900793332","dob":"1992-11-23","lastName":"Mitchell"}}'

{"authentication":{"api_key":"sales783354110","api_pass":"A|7E>arpK.L8:qkA"},"studentData":{"token":"30a9639c6ebf34b1cce7575f2adde2e9","studentId":"900793332","dob":"1992-11-23","lastName":"Mitchell"}}

This is the body data from CF
api%5Fkey=%7B%22authentication%22%3A%7B%22api%5Fkey%22%3A%22GSU783354110%22%2C%22api%5Fpass%22%3A%22A%7C7E%3EarpK%2EL8%3AqkAX%24ab%22%7D%2C%22studentData%22%3A%7B%22token%22%3A%228be0505d67c371a84ab0f67157686570%22%2C%22studentId%22%3A%22900793332%22%2C%22dob%22%3A%221992%2D11%2D23%22%2C%22lastName%22%3A%22Mitchell%22%7D%7D

Should be in JSON format.
